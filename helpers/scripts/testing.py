import requests
import time

# Configuration
zap_url = "http://localhost:8080"  # URL for the ZAP API
target_url = "http://localhost/pig"    # URL of the web application to scan

def start_spider():
    """Start the spidering process using OWASP ZAP API."""
    spider_url = f"{zap_url}/JSON/spider/action/scan/?url={target_url}&maxDepth=2"
    print(f"Spider URL: {spider_url}")
    response = requests.get(spider_url, timeout=120)
    return response.json()

def start_scan():
    """Start the active scan process using OWASP ZAP API."""
    scan_url = f"{zap_url}/JSON/ascan/action/scan/?url={target_url}&recurse=true&inScopeOnly=true"
    response = requests.get(scan_url)
    return response.json()

def check_status(scan_id, scan_type='ascan'):
    """Check the status of the scan."""
    status_url = f"{zap_url}/JSON/{scan_type}/view/status/?scanId={scan_id}"
    response = requests.get(status_url)
    return response.json()['status']

def get_results():
    """Get the scan results."""
    alerts_url = f"{zap_url}/JSON/core/view/alerts/?baseurl={target_url}&count=10"
    response = requests.get(alerts_url)
    return response.json()

def main():
    # Start spidering
    print("Starting spidering...")
    result = start_spider()
    spider_id = result['scan']

    # Wait for spidering to complete
    while True:
        status = check_status(spider_id, 'spider')
        print(f"Spider progress: {status}%")
        if status == "100":
            print("Spidering completed.")
            break
        time.sleep(10)  # Wait before checking the status again

    # Start active scanning
    print("Starting active scan...")
    result = start_scan()
    scan_id = result['scan']

    # Wait for active scanning to complete
    while True:
        status = check_status(scan_id, 'ascan')
        print(f"Scan progress: {status}%")
        if status == "100":
            print("Active scanning completed.")
            break
        time.sleep(10)  # Wait before checking the status again

    # Get and print scan results
    results = get_results()
    print("Scan results:")
    for alert in results['alerts']:
        print(f"URL: {alert['url']}")
        print(f"Risk: {alert['risk']}")
        print(f"Description: {alert['description']}")
        print()

if __name__ == "__main__":
    main()
