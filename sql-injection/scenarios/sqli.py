import subprocess
import re

def run_sqlmap(url, vulnerability, method="GET", username=None, password=None):
    cmd = ["sqlmap", "-u", url, "--batch", "-v", "3", "--level", "5", "--risk", "3"]

    if method.upper() == "POST":
        cmd.append("--method=POST")
    
    if username and password:
        login_data = f"username={username}&password={password}"
        cmd.extend(["--data", login_data])
    
    if vulnerability:
        cmd.extend(["--technique", vulnerability])
    
    process = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    stdout, stderr = process.communicate()
    
    if process.returncode == 0:
        output = stdout.decode()
        print("SQLMap ran successfully.")
        
        # Extracting payloads and relevant details
        payloads = re.findall(r"\[PAYLOAD\] (.+)", output)
        vulnerabilities = re.findall(r"\[CRITICAL\] (.+)", output)

        with open("sqlmap_results.txt", "w") as file:
            if payloads:
                file.write("Identified payloads that indicate SQL injection vulnerability:\n\n")
                for payload in payloads:
                    file.write(payload + "\n")
                print("\nPayloads saved to sqlmap_results.txt.")
            else:
                file.write("No SQL injection payloads found.\n")
            
            if vulnerabilities:
                file.write("\nIdentified vulnerabilities:\n\n")
                for vuln in vulnerabilities:
                    file.write(vuln + "\n")
                print("Vulnerabilities saved to sqlmap_results.txt.")
            else:
                file.write("No vulnerabilities found.\n")
    else:
        print("SQLMap encountered an error.")
        print(stderr.decode())

if __name__ == "__main__":
    url = input("Enter the URL to test: ")
    vulnerability = input("Enter the vulnerability to test (e.g., 'B' for boolean-based, 'T' for time-based): ").strip().upper()
    method = input("Enter the request method (GET/POST): ").strip().upper()
    username = input("Enter the username (if needed, otherwise leave blank): ").strip()
    password = input("Enter the password (if needed, otherwise leave blank): ").strip()
    
    run_sqlmap(url, vulnerability, method, username, password)
